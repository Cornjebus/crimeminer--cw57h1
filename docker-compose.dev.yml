version: '3.8'

services:
  # Frontend React Application
  web:
    build:
      context: ./src/web
      target: development
      args:
        - NODE_ENV=development
    volumes:
      - ./src/web:/app
      - /app/node_modules
    ports:
      - "3000:3000"
      - "9229:9229"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:4000
      - VITE_DEBUG=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - crimeminer-dev

  # Backend API Services
  api:
    build:
      context: ./src/backend
      target: development
    volumes:
      - ./src/backend:/app
      - /app/node_modules
      - evidence-data:/app/evidence
    ports:
      - "4000:4000"
      - "9230:9229"
    environment:
      - NODE_ENV=development
      - PORT=4000
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - ELASTICSEARCH_HOST=elasticsearch
    env_file:
      - ./src/backend/.env.development
    depends_on:
      - postgres
      - redis
      - elasticsearch
    networks:
      - crimeminer-dev

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=crimeminer
      - POSTGRES_PASSWORD=development_only
      - POSTGRES_DB=crimeminer_dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crimeminer"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crimeminer-dev

  # Redis Cache
  redis:
    image: redis:7.0-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crimeminer-dev

  # Elasticsearch
  elasticsearch:
    image: elasticsearch:8.9-alpine
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q 'status.*green'"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - crimeminer-dev

  # Prometheus Metrics
  prometheus:
    image: prom/prometheus:v2.44.0
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - crimeminer-dev

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:9.5.0
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - crimeminer-dev

volumes:
  postgres-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/postgres
      o: bind
  redis-data:
    driver: local
  elasticsearch-data:
    driver: local
  evidence-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/evidence
      o: bind
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  crimeminer-dev:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
    driver_opts:
      com.docker.network.bridge.name: crimeminer-dev