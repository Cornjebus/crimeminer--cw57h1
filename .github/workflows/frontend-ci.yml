name: Frontend CI

on:
  push:
    branches: 
      - main
      - develop
    paths:
      - 'src/web/**'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'src/web/**'

env:
  NODE_VERSION: '18.x'
  WORKING_DIRECTORY: 'src/web'
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: ['18.x']
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3 # v3
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3 # v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v3 # v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('src/web/package-lock.json') }}
          restore-keys: |
            npm-

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm ci --audit
        
      - name: Security audit dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm audit --audit-level=high

      - name: Run Snyk security scan
        uses: snyk/actions/node@v3 # v3
        with:
          args: '--severity-threshold=high'
          command: test
        env:
          SNYK_TOKEN: ${{ env.SNYK_TOKEN }}

      - name: Run type checking
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run typecheck

      - name: Run linting
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run lint
        
      - name: Run tests with coverage
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run test -- --coverage --ci --maxWorkers=2
        env:
          CI: true

      - name: Run production build
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run build
        env:
          CI: true
          NODE_ENV: production

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2 # v2
        with:
          languages: javascript, typescript
          queries: security-extended,security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2 # v2
        with:
          category: "/language:javascript"
          upload: true

      - name: Check licenses
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run audit:licenses

      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage-report
          path: ${{ env.WORKING_DIRECTORY }}/coverage
          retention-days: 14

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: ${{ env.WORKING_DIRECTORY }}/dist
          retention-days: 14