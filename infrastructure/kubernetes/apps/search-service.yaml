# Kubernetes manifest for CrimeMiner search service deployment
# Implements FedRAMP High and CJIS compliant search capabilities with Elasticsearch
# Version: 1.27+

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: search-service
  namespace: crimeminer-backend
  labels:
    app.kubernetes.io/name: search-service
    app.kubernetes.io/part-of: crimeminer
    app.kubernetes.io/component: search
    compliance-level: fedramp-high
    data-classification: sensitive-law-enforcement
  annotations:
    compliance.fedramp.gov/control-baseline: high
    security.istio.io/tlsMode: strict
    policy.security.gov/encryption-required: "true"
    audit.security.gov/level: detailed
spec:
  replicas: 3
  selector:
    matchLabels:
      app: search-service
      compliance-level: fedramp-high
      data-classification: sensitive-law-enforcement
  template:
    metadata:
      labels:
        app: search-service
        compliance-level: fedramp-high
        data-classification: sensitive-law-enforcement
        security.istio.io/tlsMode: strict
      annotations:
        compliance.fedramp.gov/control-baseline: high
        security.istio.io/tlsMode: istio
        sidecar.istio.io/inject: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "search-service"
        vault.hashicorp.com/tls-skip-verify: "false"
    spec:
      serviceAccountName: search-service-sa
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: search-service
        image: search-service:latest
        imagePullPolicy: Always
        ports:
        - name: https
          containerPort: 3000
          protocol: TCP
        resources:
          requests:
            cpu: "1000m"
            memory: "2Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        env:
        - name: ELASTICSEARCH_URL
          valueFrom:
            secretKeyRef:
              name: search-service-secrets
              key: elasticsearch-url
        - name: NODE_ENV
          value: "production"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: search-service-certs
          mountPath: /etc/search-service/certs
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: search-service-certs
        secret:
          secretName: search-service-certs
          defaultMode: 0400

---
apiVersion: v1
kind: Service
metadata:
  name: search-service
  namespace: crimeminer-backend
  labels:
    app.kubernetes.io/name: search-service
    app.kubernetes.io/part-of: crimeminer
    compliance-level: fedramp-high
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: https
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:account:certificate/certificate-id"
spec:
  ports:
  - name: https
    port: 3000
    targetPort: 3000
    protocol: TCP
  selector:
    app: search-service
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: search-service-hpa
  namespace: crimeminer-backend
  labels:
    app.kubernetes.io/name: search-service
    app.kubernetes.io/part-of: crimeminer
    compliance-level: fedramp-high
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: search-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: search-service-destination
  namespace: crimeminer-backend
spec:
  host: search-service
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 100
      http:
        maxRequestsPerConnection: 10
        http2MaxRequests: 100
    outlierDetection:
      consecutive5xxErrors: 5
      interval: 30s
      baseEjectionTime: 30s

---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: search-service-auth
  namespace: crimeminer-backend
spec:
  selector:
    matchLabels:
      app: search-service
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/crimeminer-backend/sa/api-service-sa"]
    to:
    - operation:
        methods: ["GET", "POST"]
        paths: ["/api/v1/*"]