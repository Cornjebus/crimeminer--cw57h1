# Kubernetes manifest for CrimeMiner Case Management Service
# Version: 1.0.0
# FedRAMP High and CJIS compliant deployment configuration

---
# Case Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: case-service
  namespace: crimeminer-backend
  labels:
    app: case-service
    version: 1.0.0
    compliance-level: fedramp-high
    app.kubernetes.io/part-of: crimeminer
    app.kubernetes.io/component: case-management
  annotations:
    compliance.fedramp.gov/control-baseline: high
    security.istio.io/tlsMode: STRICT
    policy.security.gov/encryption-required: "true"
    audit.security.gov/level: detailed
spec:
  replicas: 3
  selector:
    matchLabels:
      app: case-service
      compliance-level: fedramp-high
      version: 1.0.0
  template:
    metadata:
      labels:
        app: case-service
        compliance-level: fedramp-high
        version: 1.0.0
        istio-injection: enabled
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
        sidecar.istio.io/inject: "true"
        security.istio.io/tlsMode: "STRICT"
    spec:
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: case-service
        image: case-service:1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 3001
          protocol: TCP
        resources:
          requests:
            cpu: "2"
            memory: "4Gi"
          limits:
            cpu: "4"
            memory: "8Gi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 20
          periodSeconds: 10
        env:
        - name: NODE_ENV
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: case-service-config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: case-service-config
        configMap:
          name: case-service-config

---
# Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: case-service-network-policy
  namespace: crimeminer-backend
spec:
  podSelector:
    matchLabels:
      app: case-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: crimeminer-system
    - namespaceSelector:
        matchLabels:
          name: crimeminer-frontend
    ports:
    - protocol: TCP
      port: 3000
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: crimeminer-backend

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: case-service
  namespace: crimeminer-backend
  labels:
    app: case-service
    compliance-level: fedramp-high
spec:
  ports:
  - name: http
    port: 3000
    targetPort: http
  - name: metrics
    port: 3001
    targetPort: metrics
  selector:
    app: case-service

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: case-service-hpa
  namespace: crimeminer-backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: case-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# Service Monitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: case-service-monitor
  namespace: crimeminer-backend
  labels:
    app: case-service
spec:
  selector:
    matchLabels:
      app: case-service
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
  namespaceSelector:
    matchNames:
    - crimeminer-backend

---
# Prometheus Rules
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: case-service-alerts
  namespace: crimeminer-backend
spec:
  groups:
  - name: case-service
    rules:
    - alert: CaseServiceHighErrorRate
      expr: |
        sum(rate(http_requests_total{status=~"5..",service="case-service"}[5m]))
        /
        sum(rate(http_requests_total{service="case-service"}[5m])) > 0.05
      for: 5m
      labels:
        severity: critical
        service: case-service
      annotations:
        summary: High error rate in Case Service
        description: Error rate is above 5% for 5 minutes
    - alert: CaseServiceHighLatency
      expr: |
        histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{service="case-service"}[5m])) by (le)) > 0.5
      for: 5m
      labels:
        severity: warning
        service: case-service
      annotations:
        summary: High latency in Case Service
        description: 95th percentile latency is above 500ms for 5 minutes