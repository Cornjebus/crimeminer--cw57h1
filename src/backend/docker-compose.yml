version: "3.9"

services:
  # API Gateway Service
  api-gateway:
    build:
      context: ./src/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - RATE_LIMIT_WINDOW=15m
      - RATE_LIMIT_MAX=1000
      - TLS_CERT_PATH=/certs/server.crt
      - TLS_KEY_PATH=/certs/server.key
    depends_on:
      - auth-service
      - case-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    resources:
      limits:
        cpus: "1"
        memory: 2G
      reservations:
        cpus: "0.5"
        memory: 1G
    security_opt:
      - no-new-privileges:true
    read_only: true
    networks:
      - backend

  # Authentication Service
  auth-service:
    build:
      context: ./src/auth-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MFA_REQUIRED=true
      - AUDIT_LOG_ENABLED=true
      - LOG_LEVEL=info
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    resources:
      limits:
        cpus: "2"
        memory: 4G
      reservations:
        cpus: "1"
        memory: 2G
    security_opt:
      - no-new-privileges:true
    read_only: true
    networks:
      - backend

  # Case Management Service
  case-service:
    build:
      context: ./src/case-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=3002
      - CJIS_COMPLIANCE=enabled
      - LOG_LEVEL=info
    depends_on:
      - postgres
      - elasticsearch
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    resources:
      limits:
        cpus: "2"
        memory: 4G
      reservations:
        cpus: "1"
        memory: 2G
    security_opt:
      - no-new-privileges:true
    read_only: true
    networks:
      - backend

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=crimeminer
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_DB=crimeminer
      - POSTGRES_INITDB_ARGS="--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crimeminer"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - backend

  # Redis Cache
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 2gb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - backend

  # Elasticsearch
  elasticsearch:
    image: elasticsearch:8.9
    environment:
      - node.name=es01
      - cluster.name=crimeminer-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.audit.enabled=true
      - ELASTIC_PASSWORD_FILE=/run/secrets/elastic_password
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q 'status.*green'"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - backend

volumes:
  postgres_data:
    driver: local
    name: crimeminer_postgres_data
    driver_opts:
      type: none
      device: /data/postgres
      o: bind
  redis_data:
    driver: local
    name: crimeminer_redis_data
    driver_opts:
      type: none
      device: /data/redis
      o: bind
  elasticsearch_data:
    driver: local
    name: crimeminer_elasticsearch_data
    driver_opts:
      type: none
      device: /data/elasticsearch
      o: bind

networks:
  backend:
    driver: bridge
    name: crimeminer_backend
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
    driver_opts:
      encrypt: "true"

secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
  elastic_password:
    file: ./secrets/elastic_password.txt
  redis_password:
    file: ./secrets/redis_password.txt